**FREE

///
// HTTP Request Builder : Unit Test
//
//
// @author Mihael Schmidt
// @date   09.02.2023
///


ctl-opt nomain;


/include 'assert.rpginc'
/include 'request.rpginc'

dcl-c O_RDONLY 1;
dcl-pr open int(10) extproc('open');
  path pointer value options(*string);
  openflags int(10) value;
  mode uns(10) value options(*nopass);
  ccsid uns(10) value options(*nopass);
end-pr;

dcl-pr read int(10) extproc('read');
  fildes int(10) value;
  buf pointer value;
  bytes uns(10) value;
end-pr;

dcl-pr close int(10) extproc('close');
  fildes int(10) value;
end-pr;

dcl-pr memcmp int(10) extproc('memcmp');
  buffer1 pointer value;
  buffer2 pointer value;
  count uns(10) value;
end-pr;

dcl-pr test_minimum end-pr;


dcl-proc test_minimum export;
  dcl-s request pointer;
  dcl-s buffer varchar(1000000:4) ccsid(*utf8);
  dcl-s assumedResult varchar(1000000:4) ccsid(*utf8);
  
  assumedResult = loadFile('unittests/request/test1-minimum.http');
  
  request = iv_request_new('GET' : 'http://localhost'); 
  buffer = iv_request_toString(request);
  
  iEqual(%len(assumedResult) : %len(buffer));
  assert(assumedResult = buffer : 'Request does not correspond to assumed result.');
  
  on-exit;
    iv_request_dispose(request);
end-proc;



dcl-proc loadFile;
  dcl-pi *n varchar(1000000) ccsid(*hex);
    p_path varchar(1000) const;
  end-pi;

  dcl-s path varchar(1000);
  dcl-s content char(1000000) ccsid(*hex);
  dcl-s returnValue varchar(1000000) ccsid(*hex);
  dcl-s len int(10);
  dcl-s fd int(10);

  path = p_path + x'00';

  fd = open(%addr(path : *data) : O_RDONLY);
  if (fd >= 0);
    len = read(fd : %addr(content) : 1000000);
    returnValue = %subst(content : 1 : len);
  endif;

  return returnValue;
  
  on-exit;
    if (fd >= 0);
      callp close(fd);
    endif;
end-proc;