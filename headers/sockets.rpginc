**FREE

/if not defined (ILEVATOR_SOCKETS)
/define ILEVATOR_SOCKETS

dcl-c PLAIN_SOCKET 0;
dcl-c SECURE_HANDSHAKE_IMEDIATE 1;
dcl-c SECURE_HANDSHAKE_LATER 2;

dcl-pr sockets_setKeystore extproc(*CWIDEN:'sockets_setKeystore');
    sockets pointer value;
    useSSL  int(3)  value;
    certificateFile pointer options(*string) value;
    keyringPassword pointer options(*string) value;
end-pr;

dcl-pr sockets_new pointer extproc(*CWIDEN:'sockets_new') end-pr;

dcl-pr sockets_free extproc(*CWIDEN:'sockets_free');
    sockets pointer value;
end-pr;

dcl-pr sockets_close extproc(*CWIDEN:'sockets_close');
    sockets pointer value;
end-pr;

dcl-pr sockets_connect int(3) extproc(*CWIDEN:'sockets_connect');
    sockets  pointer value;
    server pointer options(*string) value;
    port    int(10) value;
    timeout int(10) value;
    blockingSockets ind value;
end-pr;

dcl-pr sockets_copy_socket int(3) extproc(*CWIDEN:'sockets_copy_socket');
    toSockets    pointer value;
    fromSockets  pointer value;
    hostName     pointer value options (*string:*trim);
end-pr;

dcl-pr sockets_set_secure int(3) extproc(*CWIDEN:'sockets_set_secure');
    sockets  pointer value;
end-pr;

dcl-pr sockets_send int(10) extproc(*dclcase);
    sockets pointer value;
    buffer pointer value;
    length int(10) value;
end-pr;

dcl-pr sockets_setTrace extproc(*CWIDEN:'sockets_setTrace');
    sockets  pointer value;
    traceFile  pointer options(*string) value;
end-pr;

dcl-pr sockets_setSsl extproc(*CWIDEN:'sockets_setSsl');
    sockets  pointer value;
    version int(10) value; // see GSK_PROTOCOL_SSLV3
    status int(10) value;  // 513 = disabled , 512 = enabled
end-pr;

dcl-pr sockets_setTls extproc(*CWIDEN:'sockets_setTls');
    sockets  pointer value;
    version int(10) value; // see GSK_PROTOCOL_TLSVxx
    status int(10) value;  // 0 = disabled , 1 = enabled
end-pr;

/endif